{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div style=\"float:right;\"><img src=FHAachen-logo2010.svg.png width=80>\n",
    "</div><br><br><br>\n",
    "<h1><span style=\"color:#009999\"> FH Aachen</h1> \n",
    "\n",
    "## Fachbereich: Wirtschaftswissenschaften, Maschinenbau und Mechatronik\n",
    "\n",
    "**Modul:** Datenmanagement, Leittechnik und statistische Prozesslenkung (83310)\n",
    "\n",
    "<br><br><br><br><br><br><br><br>\n",
    "\n",
    "<h3><center>Hausarbeit</center></h3>\n",
    "<center>im Studiengang „Industrial Engineering“</center>\n",
    "\n",
    "\n",
    "<h1><center>Schimmelüberwachung in einem Badezimmer</center></h1>\n",
    "\n",
    "<br><br><br><br><br><br><br><br><br>\n",
    "Vorgelegt von:<br>\n",
    "Svenja Beck, Matr. Nr.:3241983 <br>\n",
    "Moritz Wernick, Matr. Nr.:3245021 \n",
    "\n",
    "<br><br><br>\n",
    "\n",
    "**Referent:** Prof. Dr. Ing. Stephan Kallweit <br>**Abgabedatum:** 15.03.2021\n",
    "<br><br><br><br><br>\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Inhalt\n",
    "### [1. Einleitung](#Einleitung)\n",
    "### [2. Daten einlesen](#Einlesen)\n",
    "[<h4><font face=\"Arial\">2.1 Bibliotheken importieren</font></h4>](#importieren)\n",
    "[<h4><font face=\"Arial\">2.2 Daten aus MongoDB importieren </font></h4>](#einlesen)\n",
    "[<h4><font face=\"Arial\">2.3 Durchführung der Datensäuberung und -transformation</font></h4>](#säubern)\n",
    "[<h4><font face=\"Arial\">2.4 Spalten hinzufügen</font></h4>](#hinzufügen)\n",
    "\n",
    "### [3. Analyse der Daten](#Analysieren)\n",
    "[<h4><font face=\"Arial\">3.1 Übersicht</font></h4>](#übersicht)\n",
    "[<h4><font face=\"Arial\">3.2 Beispiel-Tag</font></h4>](#beispiel)\n",
    "\n",
    "### [4. Maschinelles Lernen](#ML)\n",
    "[<h4><font face=\"Arial\">4.1 Klassifizierung der Zustände</font></h4>](#zustand)\n",
    "[<h4><font face=\"Arial\">4.2 Logistische Regression</font></h4>](#lr)\n",
    "[<h4><font face=\"Arial\">4.3 SVM Linear</font></h4>](#svmlr)\n",
    "[<h4><font face=\"Arial\">4.4 SVM RBF</font></h4>](#svmrbf)\n",
    "[<h4><font face=\"Arial\">4.5 Decision Tree</font></h4>](#dt)\n",
    "\n",
    "### [5. Graphical User Interface](#gui)\n",
    "\n",
    "<br><br><br>\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Einleitung<a id='Einleitung'></a>\n",
    "\n",
    "Für die praktische Anwendung der Inhalte des Kurses Datenemanagement, Leittechnik und statistische Prozesslenkung wurde ein Projekt durchgeführt. <br> Hierbei wurden Daten mittels Microcontroller und Sensoren aufgenommen, über MQTT an ein Datenbanksystem versendet, gespeichert, mit Maschinellem Lernen untersucht und in einer grafischen Benutzeroberfläche dargestellt. <br>\n",
    "Für die Anwendung wurde der Use-Case \"Schimmel im Badezimmer\" gewählt. Etwa 20% der deutschen Haushalte kämpfen mit Schimmel, dieser tritt vor allem im Badezimmer auf, da hier optimale Bedingungen herrschen.Gemessen wurden hierfür Luftfeuchtigkeit, Temperatur und ob das Fenster zum Lüften geöffnet wurde. <br> Im Folgenden werden ergänzend zum abgegebenen Bericht die gemessenen Daten ausgewertet und der zugehörige Code erklärt."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Daten einlesen<a id='Einlesen'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.1 Bibliotheken importieren<a id='importieren'></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 625,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd \n",
    "import matplotlib.pyplot as plt\n",
    "import openpyxl\n",
    "import time \n",
    "import bs4\n",
    "import pymongo\n",
    "from pymongo import MongoClient\n",
    "\n",
    "#für Timeconversion\n",
    "from time import gmtime\n",
    "import datetime\n",
    "\n",
    "#für Machine Learning\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn import datasets\n",
    "from sklearn.svm import LinearSVC\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from matplotlib.colors import ListedColormap\n",
    "from pydotplus import graph_from_dot_data\n",
    "from sklearn.tree import plot_tree\n",
    "\n",
    "#für GUI\n",
    "#from pandastable import Table\n",
    "import matplotlib\n",
    "matplotlib.use(\"TkAgg\")\n",
    "from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg \n",
    "try:\n",
    "    from matplotlib.backends.backend_tkagg import NavigationToolbar2TkAgg\n",
    "except ImportError:\n",
    "    from matplotlib.backends.backend_tkagg import NavigationToolbar2Tk as NavigationToolbar2TkAgg\n",
    "from matplotlib.figure import Figure\n",
    "\n",
    "from matplotlib.dates import DateFormatter\n",
    "import matplotlib.dates as mdates\n",
    "\n",
    "import tkinter as tk\n",
    "from tkinter import ttk"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.2 Daten aus MongoDB importieren<a id='einlesen'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Daten direkt aus Mongo DB laden, mwernick1996@gmail.com, Passwort: dlsp2020"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 635,
   "metadata": {},
   "outputs": [],
   "source": [
    "client = MongoClient(\"mongodb+srv://moritz:dlsp@cluster0.sramn.mongodb.net/moritz?retryWrites=true&w=majority\")\n",
    "db = client.get_database('iot_beck')\n",
    "collection = db.bathroom_update3\n",
    "data = pd.DataFrame(list(collection.find()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "#gesamt_data = pd.ExcelFile(\"data_df.xlsx\")\n",
    "#data = pd.read_excel(gesamt_data, 'OV', header=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 636,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 103847 entries, 0 to 103846\n",
      "Data columns (total 8 columns):\n",
      " #   Column       Non-Null Count   Dtype  \n",
      "---  ------       --------------   -----  \n",
      " 0   _id          103847 non-null  object \n",
      " 1   device       103847 non-null  object \n",
      " 2   sample_date  103847 non-null  object \n",
      " 3   temp         103847 non-null  float64\n",
      " 4   humi         103847 non-null  float64\n",
      " 5   gyro_x       103847 non-null  float64\n",
      " 6   gyro_y       103847 non-null  float64\n",
      " 7   time         103847 non-null  object \n",
      "dtypes: float64(4), object(4)\n",
      "memory usage: 4.8+ MB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.3 Durchführung der Datensäuberung und -transformation<a id='säubern'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Die Daten wurden von ab dem 01. Februar bis zum 15. März gemessen (siehe Datebank). Da zu Beginn noch Anpassungen durchgeführt worden, wurde für die Auswertung der Zeitraum 01.02. - 28.02. festgelegt. Die nachfolgend im GUI dargestellte Gesamtübersicht fasst die gemessenen Daten in diesem Zeitraum zusammen. Die Tagesansichten beziehen sich auf die ersten 7 Tage (01.02. - 07.02.) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Zeitraum eingrenzen im DataFrame \n",
    "Nachfolgendes Array zeigt alle Tage, an denen gemessen wurde."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 637,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['2021-01-31', '2021-02-01', '2021-02-02', '2021-02-03',\n",
       "       '2000-01-01', '2021-02-04', '2021-02-05', '2021-02-06',\n",
       "       '2021-02-07', '2021-02-09', '2021-02-10', '2021-02-11',\n",
       "       '2021-02-12', '2021-02-13', '2021-02-14', '2021-02-15',\n",
       "       '2021-02-16', '2021-02-17', '2021-02-18', '2021-02-19',\n",
       "       '2021-02-20', '2021-02-21', '2021-02-22', '2021-02-23',\n",
       "       '2021-02-24', '2021-02-25', '2021-02-26', '2021-02-27',\n",
       "       '2021-02-28', '2021-03-01', '2021-03-02', '2021-03-03',\n",
       "       '2021-03-04', '2021-03-05', '2021-03-06', '2021-03-07',\n",
       "       '2021-03-08', '2021-03-09', '2021-03-10', '2021-03-11',\n",
       "       '2021-03-12', '2021-03-13'], dtype=object)"
      ]
     },
     "execution_count": 637,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sample_date = data['sample_date']\n",
    "sample = sample_date.to_frame()\n",
    "sample_unique = sample.sample_date.unique()\n",
    "sample_unique"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Das Array wird zur Liste konvertiert und entsprechend der beschriebenen Zeiträume angepasst."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 638,
   "metadata": {},
   "outputs": [],
   "source": [
    "sample_list = sample_unique.tolist()\n",
    "index_startdate = sample_list.index(\"2021-02-01\")\n",
    "index_enddate = sample_list.index(\"2021-02-28\")\n",
    "del sample_list[index_startdate:index_enddate+1]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Anschließend wird der Dataframe mit allen Tagen mithilfe der Liste angepasst und die Daten zur Überprüfung ausgegeben."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 639,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['2021-02-01', '2021-02-02', '2021-02-03', '2000-01-01',\n",
       "       '2021-02-04', '2021-02-05', '2021-02-06', '2021-02-07',\n",
       "       '2021-02-09', '2021-02-10', '2021-02-11', '2021-02-12',\n",
       "       '2021-02-13', '2021-02-14', '2021-02-15', '2021-02-16',\n",
       "       '2021-02-17', '2021-02-18', '2021-02-19', '2021-02-20',\n",
       "       '2021-02-21', '2021-02-22', '2021-02-23', '2021-02-24',\n",
       "       '2021-02-25', '2021-02-26', '2021-02-27', '2021-02-28'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 639,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_data = data[~data.sample_date.isin(sample_list)]\n",
    "new_data.sample_date.unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Es bleiben noch gut 71.000 Werte für die weitergehende Analyse übrig."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 640,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "_id            71143\n",
       "device             1\n",
       "sample_date       28\n",
       "temp             169\n",
       "humi             701\n",
       "gyro_x             3\n",
       "gyro_y             3\n",
       "time           71122\n",
       "dtype: int64"
      ]
     },
     "execution_count": 640,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_data.nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Zeitformat ändern \n",
    "\n",
    "Im nächsten Schritt wird das Zeitformat geändert, um dies im weiteren Verlauf in Graphen verwenden zu können."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 641,
   "metadata": {},
   "outputs": [],
   "source": [
    "list_time = new_data['time'].to_list()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Es wird hierfür ein neuer DataFrame erzeugt. Jeder Zeitwert wird (für Menschen lesbar) formatiert und dem erzeugten Dataframe angehangen."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 642,
   "metadata": {},
   "outputs": [],
   "source": [
    "time_df = pd.DataFrame(columns=['time', 'timetuple'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 643,
   "metadata": {},
   "outputs": [],
   "source": [
    "for var in list_time:\n",
    "        v = int(var)\n",
    "        t = time.gmtime(v)\n",
    "        d = time.strftime(\"%H:%M:%S\", t)\n",
    "        time_df = time_df.append({'time': var, 'timetuple':d}, ignore_index=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Anschließend wird der erzeugte Df mit dem bestehenden \"gemerged\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 645,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_df = pd.merge(new_data,time_df, on ='time',how ='inner')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 646,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 71291 entries, 0 to 71290\n",
      "Data columns (total 9 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   _id          71291 non-null  object \n",
      " 1   device       71291 non-null  object \n",
      " 2   sample_date  71291 non-null  object \n",
      " 3   temp         71291 non-null  float64\n",
      " 4   humi         71291 non-null  float64\n",
      " 5   gyro_x       71291 non-null  float64\n",
      " 6   gyro_y       71291 non-null  float64\n",
      " 7   time         71291 non-null  object \n",
      " 8   timetuple    71291 non-null  object \n",
      "dtypes: float64(4), object(5)\n",
      "memory usage: 4.1+ MB\n"
     ]
    }
   ],
   "source": [
    "data_df.info(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Analyse der Daten<a id='Analyse'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3.1 Übersicht<a id='übersicht'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Durchschnittliche Anzahl der Werte pro Tag:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 647,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2546.1071428571427"
      ]
     },
     "execution_count": 647,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#länge column \n",
    "sum_values = len(data_df)\n",
    "\n",
    "# länge Liste der Tage (sample_datedata_df.query('sample_date == \"2021-02-02\"')\n",
    "sum_days = len(new_data.sample_date.unique())\n",
    "\n",
    "#Verhältnis\n",
    "values_per_day = sum_values/sum_days\n",
    "values_per_day"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Werte normalerweise pro Tag \n",
    "(ca. alle 20 Sekunden ein Wert unter normalen Umständen)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 648,
   "metadata": {},
   "outputs": [],
   "source": [
    "#hochrechnen ca. 3 pro minute hochrechnen auf einen Tag, bei 24/7 Messung\n",
    "usual_vpd = 3*60*24"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Fehlerquote \n",
    "Abweichungen durch Messfehler, geschuldet durch Gründe, wie bspw. Internetprobleme. Betrieb des Microcontroller hat nachts häufig ausgesetzt. Probleme konnten dann erst am nächsten Morgen behoben werden."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 649,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fehlerquote: 0.41062334656084665 %\n"
     ]
    }
   ],
   "source": [
    "print(\"Fehlerquote:\", 1-(values_per_day/usual_vpd), \"%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Anzahl, wie oft das Fenster geöffnet und geschlossen wurde:\n",
    "Die \"1\" wird ausgegeben, sobald das Fenster geöffnet wird. Die \"-1\" steht für das Schließen. Die \"0\" für Ruhezustand, entweder offen oder geschlossen."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 650,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "gyro_x:\n",
      "  0.0    71247\n",
      " 1.0       35\n",
      "-1.0        9\n",
      "Name: gyro_x, dtype: int64 \n",
      "\n",
      "gyro_y:\n",
      "  0.0    71247\n",
      " 1.0       35\n",
      "-1.0        9\n",
      "Name: gyro_y, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(\"gyro_x:\\n\", data_df['gyro_x'].value_counts(), \"\\n\")\n",
    "print(\"gyro_y:\\n\",data_df['gyro_y'].value_counts())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Im Untersuchungszeitraum wurde laut der Daten das Fenster 35 Mal geöffnet, aber nur 9 Mal geschlossen. Grund für den Fehler kann das zu breit eingestellte Toleranzband für das Schließen sein. Die Bewegungen bei Testdurchführung zum Setzen der Toleranzwerte erfolgte offensichtlich schneller als die tatsächliche Umsetzung. Die Mitbewohner könnten somit das Fenster nicht schnell genug geschlossen haben, weshalb kein ausreichend hoher Wert detektiert wurde."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Anzahl der Tage, an denen Bewegungen des Fensters gemessen wurde:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 651,
   "metadata": {},
   "outputs": [],
   "source": [
    "motion = data_df.query('gyro_x == \"1\" or gyro_x == \"-1\" or gyro_y == \"1\" or gyro_y == \"-1\"')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 652,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['2021-02-01', '2021-02-02', '2021-02-03', '2021-02-05',\n",
       "       '2021-02-06', '2021-02-07', '2021-02-09', '2021-02-10',\n",
       "       '2021-02-11', '2021-02-12', '2021-02-15', '2021-02-16',\n",
       "       '2021-02-18', '2021-02-19', '2021-02-20', '2021-02-24',\n",
       "       '2021-02-26'], dtype=object)"
      ]
     },
     "execution_count": 652,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "motion.sample_date.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 653,
   "metadata": {},
   "outputs": [],
   "source": [
    "sum_days_motion = len(motion.sample_date.unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 654,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "11\n"
     ]
    }
   ],
   "source": [
    "diff = sum_days - sum_days_motion\n",
    "print(diff)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3.2 Beispiel-Tag<a id='beispiel'></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 655,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "example_day = data_df.query('sample_date == \"2021-02-02\"')\n",
    "\n",
    "fig, ax1 = plt.subplots()\n",
    "\n",
    "c1=\"darkseagreen\"\n",
    "example_day[[\"timetuple\", \"humi\"]].plot(x=\"timetuple\",c = c1 ,ax=ax1, kind=\"line\", fontsize=10, grid=True)\n",
    "ax1.set_ylabel('Humiditiy/%', color=c1) \n",
    "ax1.tick_params(axis='y', labelcolor=c1)\n",
    "ax1.legend(loc=\"upper left\")\n",
    "plt.setp(ax1.get_xticklabels(), rotation=30, ha='right')\n",
    "\n",
    "ax2 = ax1.twinx() \n",
    "\n",
    "c2=\"teal\"\n",
    "example_day[[\"timetuple\", \"temp\"]].plot(x=\"timetuple\",c = c2 ,ax=ax2, kind=\"line\", fontsize=10, grid=True)\n",
    "ax2.set_ylabel('Temperatur/°C', color=c2)\n",
    "ax2.tick_params(axis='y', labelcolor=c2)\n",
    "ax2.legend(loc=\"upper right\")\n",
    "plt.setp(ax2.get_xticklabels(), rotation=30, ha='right')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Die Anzahl des Öffnen und Schließen des Fensters bestätigt sich anhand der Werte des Beispieltages:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 656,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " 0.0    2654\n",
      " 1.0       5\n",
      "-1.0       1\n",
      "Name: gyro_x, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(example_day['gyro_x'].value_counts())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Dem Diagramm zu Folge scheint eine inverse Korrelation zwischen den Werten zu bestehen. Dies wird in den folgenden Zeile überprüft. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 657,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Korrelationskoeffizient: -0.7016884752379232\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(example_day['humi'],example_day['temp'], '.', color='steelblue');\n",
    "plt.plot(np.unique(example_day['humi']), np.poly1d(np.polyfit(example_day['humi'], example_day['temp'], 1))(np.unique(example_day['humi'])), color='yellow')\n",
    "plt.xlabel(\"Humi\")\n",
    "plt.ylabel(\"Temp\")\n",
    "print(\"Korrelationskoeffizient:\", example_day['humi'].corr(example_day['temp']))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Es zeigt sich, dass ein hoher negativer Zusamenhang besteht. Die Berechnung der Korrelation für Temp und Humi im gesamten Datensatz ergibt allerdings einen geringen bis mittleren inversen Zusammenhang. Grund dafür könnten die Tagen sein, in denen nicht geduscht oder gelüftet wurde und somit nicht viel in dem Badezimmer bzgl. Temperatur und Humi passiert ist."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 658,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.35446593769718227"
      ]
     },
     "execution_count": 658,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_df['humi'].corr(data_df['temp'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. Maschinelles Lernen<a id='ML'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.1 Klassifizierung der Zustände<a id='zustand'></a>\n",
    "\n",
    "Hinzufügen einer neuen Spalte, um die Zustände hinsichtlich Schimmels pro Zeile beschreiben zu können."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 659,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_df[\"Zustand\"] = \"\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Zustandswerte pro Zeile ergänzen:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 660,
   "metadata": {},
   "outputs": [],
   "source": [
    "for index in data_df.index:\n",
    "    if data_df.loc[index, \"humi\"] <= 40:\n",
    "        data_df.loc[index, \"Zustand\"] = 1 #zu trocken\n",
    "    elif data_df.loc[index, \"humi\"] > 40 and data_df.loc[index, \"temp\"] <= 20:\n",
    "        data_df.loc[index, \"Zustand\"] = 2 # zu kalt\n",
    "    elif data_df.loc[index, \"humi\"] > 40 and data_df.loc[index, \"humi\"] <= 60 and data_df.loc[index, \"temp\"] > 20 and data_df.loc[index, \"temp\"] <= 24:\n",
    "        data_df.loc[index, \"Zustand\"] = 3 #ideal\n",
    "    elif data_df.loc[index, \"humi\"] > 40 and data_df.loc[index, \"temp\"] > 24:\n",
    "        data_df.loc[index, \"Zustand\"] = 4 # zu warm\n",
    "    else:\n",
    "        data_df.loc[index, \"Zustand\"] = 5 # Schimmel\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Zunächst das Festlegen der Daten für X und Y:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 661,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = data_df.iloc[:, [3,4]]\n",
    "y = data_df[\"Zustand\"].values.flatten()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Aufteilen der Daten in Trainings- und Testdaten:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 662,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.3, random_state = 1, stratify = y)\n",
    "sc = StandardScaler()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Definition der Darstellungsweise beim Plotten der Grafiken:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 663,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_decision_regions(X, y, classifier, test_idx=None, resolution=0.02):\n",
    "    # setup marker generator and color map\n",
    "    markers = ('s', 'x', 'o', '^', 'v', '4')\n",
    "    colors = ( 'red','blue', 'lightgreen', 'gray', 'cyan', 'purple')\n",
    "    cmap = ListedColormap(colors[0:5])\n",
    "    # plot the decision surface\n",
    "    x1_min, x1_max = X[:, 0].min() -1, X[:, 0].max() + 1\n",
    "    x2_min, x2_max = X[:, 1].min() -1, X[:, 1].max() + 1\n",
    "    xx1, xx2 = np.meshgrid(np.arange(x1_min, x1_max, resolution),\n",
    "                           np.arange(x2_min, x2_max, resolution))\n",
    "    Z = classifier.predict(np.array([xx1.ravel(), xx2.ravel()]).T)\n",
    "    Z = Z.reshape(xx1.shape)\n",
    "    plt.contourf(xx1, xx2, Z, alpha=0.4, cmap=cmap)\n",
    "    plt.xlim(xx1.min(), xx1.max())\n",
    "    plt.ylim(xx2.min(), xx2.max())\n",
    "    plt.xlabel('Temperatur')\n",
    "    plt.ylabel('Luftfeuchtigkeit')\n",
    "\n",
    "    for idx, cl in enumerate(np.unique(y)):\n",
    "        plt.scatter(x=X[y == cl, 0], y=X[y == cl, 1],\n",
    "                    alpha=0.8, c=colors[idx],\n",
    "                    marker=markers[idx], label=cl,\n",
    "                    edgecolor='black')\n",
    "\n",
    "    # highlight test samples\n",
    "    if test_idx:\n",
    "        # plot all samples\n",
    "        X_test, y_test = X[test_idx, :], y[test_idx]\n",
    "        plt.scatter(X_test[:, 0], X_test[:, 1],\n",
    "                    c='', edgecolor='black', alpha=1.0,\n",
    "                    linewidth=1, marker='o',\n",
    "                    s=100, label='test set')\n",
    "\n",
    "    plt.legend(loc='upper left')\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.2 Logistische Regression<a id='lr'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Definition der Parameter für die logistische Regression, anpassen der Datensätze. Anschließend werden die Ergebnisse der Kalssifizierung ausgegeben (Missclassified samples und Accuracy score). <br>\n",
    "Ausgabe der Grafik mit kombinierter Datenbasis aus Test- und Trainingsdaten"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 664,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1 4 2 ... 3 2 2] [1 4 2 ... 3 2 2]\n",
      "Missclassified samples: 358\n",
      "Accuracy: 0.98\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "lr = LogisticRegression(C= 100.0, random_state = 1)\n",
    "sc.fit(X_train, y_train)\n",
    "sc.fit(X_test, y_test)\n",
    "y_train=y_train.astype('int')\n",
    "y_test=y_test.astype('int')\n",
    "\n",
    "X_train_std = sc.transform(X_train)\n",
    "X_test_std = sc.transform(X_test)\n",
    "\n",
    "lr.fit(X_train_std, y_train)\n",
    "lr.fit(X_test_std, y_test)\n",
    "\n",
    "y_pred = lr.predict(X_test_std)\n",
    "y_pred = y_pred.astype('int')\n",
    "print (y_test, y_pred)\n",
    "print('Missclassified samples: %d' % (y_test != y_pred).sum())\n",
    "\n",
    "print ('Accuracy: %.2f' % accuracy_score(y_test, y_pred))\n",
    "\n",
    "X_combined = np.vstack((X_train_std, X_test_std))\n",
    "y_combined = np.concatenate((y_train, y_test))\n",
    "\n",
    "plot_decision_regions (X = X_combined, y = y_combined, classifier = lr)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Interpretation LR: \n",
    "-Sehr hohe Genauigkeit der Klassifizierung <br> -Gute Trennung aller definierten Bereiche"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.3 SVM Linear<a id='svmlr'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Definition der Parameter für die Analyse mit Support Vector Machine und linearem Kern, anpassen der Datensätze. Anschließend werden die Ergebnisse der Kalssifizierung ausgegeben (Missclassified samples und Accuracy score). <br>\n",
    "Ausgabe der Grafik mit kombinierter Datenbasis aus Test- und Trainingsdaten"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 665,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Missclassified samples: 1905\n",
      "Accuracy: 0.91\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "svm = LinearSVC (random_state = 1, C =1.0)\n",
    "svm.fit(X_train_std, y_train)\n",
    "svm.fit(X_test_std, y_test)\n",
    "y_pred = svm.predict(X_test_std)\n",
    "print('Missclassified samples: %d' % (y_test != y_pred).sum())\n",
    "print ('Accuracy: %.2f' % accuracy_score(y_test, y_pred))\n",
    "\n",
    "\n",
    "X_combined = np.vstack((X_train_std, X_test_std))\n",
    "y_combined = np.concatenate((y_train, y_test))\n",
    "\n",
    "plot_decision_regions (X = X_combined, y = y_combined, classifier = svm)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Interpretation SVM Linear: \n",
    "-Schlechteste Klassifizierungsgenauigkeit von allen angewendeten Methoden im vorliegenden Fall"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.4 SVM RBF<a id='svmrbf'></a>\n",
    "Definition der Parameter für die Analyse mit Support Vector Machine und nicht inearem Kern, anpassen der Datensätze. Gamma gibt an, wie sehr sich die Trennlinien um die Punktewolken biegen sollen. Hier kaönnen verscheidene Werte ausprobiert werden.Anschließend werden die Ergebnisse der Kalssifizierung ausgegeben (Missclassified samples und Accuracy score).  <br>\n",
    "Ausgabe der Grafik mit kombinierter Datenbasis aus Test- und Trainingsdaten"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 666,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Missclassified samples: 365\n",
      "Accuracy: 0.98\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "svm = SVC(kernel = 'rbf', random_state = 1, gamma = 0.1, C = 1.0)\n",
    "svm.fit (X_train_std, y_train)\n",
    "svm.fit(X_test_std, y_test)\n",
    "y_pred =svm.predict(X_test_std)\n",
    "print('Missclassified samples: %d' % (y_test != y_pred).sum())\n",
    "print ('Accuracy: %.2f' % accuracy_score(y_test, y_pred))\n",
    "\n",
    "X_combined = np.vstack((X_train_std, X_test_std))\n",
    "y_combined = np.concatenate((y_train, y_test))\n",
    "\n",
    "plot_decision_regions (X = X_combined, y = y_combined, classifier = svm)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Interpretation:\n",
    "-Die Linien wölben sich um die Punktewolken<br>-Gute Genauigkeit der Klassifizierung, allerdings wenig Übersichtlichkeit"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.5 Decision Tree<a id='dt'></a>\n",
    "Definition der Parameter für die Analyse mit einem Entscheidungsbaum, anpassen der Datensätze. Kriterium ist ein möglichst geringer gini-Koeffizient. Baumtiefe von 4 für 5 Teilungen ausreichend. Anschließend werden die Ergebnisse der Kalssifizierung ausgegeben (Missclassified samples und Accuracy score).  <br>\n",
    "Ausgabe der Grafik mit kombinierter Datenbasis aus Test- und Trainingsdaten"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 667,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Missclassified samples: 0\n",
      "Accuracy: 1.00\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "tree = DecisionTreeClassifier(criterion = 'gini', max_depth = 5, random_state = 1).fit(X_train_std, y_train)\n",
    "y_pred =tree.predict(X_test_std)\n",
    "print('Missclassified samples: %d' % (y_test != y_pred).sum())\n",
    "print ('Accuracy: %.2f' % accuracy_score(y_test, y_pred))\n",
    "\n",
    "X_combined = np.vstack((X_train_std, X_test_std))\n",
    "y_combined = np.concatenate((y_train, y_test))\n",
    "\n",
    "plot_decision_regions(X = X_combined, y = y_combined, classifier = tree)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Interpretation:\n",
    "-Sehr hohe Klassifizierungsgüte<br> -Baum kann die Einteilung perfekt wiedergeben<br> -Einfache Interpretation durch Menschen möglich <br>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 668,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_tree(tree , filled = True, class_names = ['zu trocken', 'zu kalt', 'ideal','zu warm', 'schimmel'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 5. Graphical User Interface<a id='gui'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Für die Tagesansichten werden die ersten sieben Tage des Untersuchungszeitraums beispielhaft gewählt. Jeder Tag wird einzeln dargestellt."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Vorbereitung für die Gruppierung der Minuten pro Zustand:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 669,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_df=data_df.assign(concant_time=lambda x: x['sample_date'] + \" \" +  x['timetuple'])\n",
    "data_df=data_df.assign(concant_time=lambda x: pd.to_datetime(x['concant_time'], format = \"%Y-%m-%d %H:%M:%S\")) #\n",
    "data_df=data_df.assign(diff1=lambda x: x['concant_time'] - x['concant_time'].shift(1))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Gruppierung über den gesamten Messzeitraum pro Zustand:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 670,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_grouped = data_df.groupby('Zustand', as_index=False).agg({\"diff1\": \"sum\"})\n",
    "df_grouped=df_grouped.assign(sum_s=lambda x: x[\"diff1\"].astype('timedelta64[s]'))\n",
    "df_grouped=df_grouped.assign(sum_p=lambda x: ((x[\"sum_s\"]/df_grouped[\"sum_s\"].sum())*100).astype('float'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 677,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zustand</th>\n",
       "      <th>diff1</th>\n",
       "      <th>sum_s</th>\n",
       "      <th>sum_p</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>7 days 14:48:56</td>\n",
       "      <td>658136.0</td>\n",
       "      <td>27.204752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>11 days 20:32:07</td>\n",
       "      <td>1024327.0</td>\n",
       "      <td>42.341647</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>7 days 14:16:38</td>\n",
       "      <td>656198.0</td>\n",
       "      <td>27.124643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>0 days 18:30:03</td>\n",
       "      <td>66603.0</td>\n",
       "      <td>2.753106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0 days 03:52:11</td>\n",
       "      <td>13931.0</td>\n",
       "      <td>0.575853</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Zustand            diff1      sum_s      sum_p\n",
       "0        1  7 days 14:48:56   658136.0  27.204752\n",
       "1        2 11 days 20:32:07  1024327.0  42.341647\n",
       "2        3  7 days 14:16:38   656198.0  27.124643\n",
       "3        4  0 days 18:30:03    66603.0   2.753106\n",
       "4        5  0 days 03:52:11    13931.0   0.575853"
      ]
     },
     "execution_count": 677,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_grouped"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Jeder einzelne Tag bekommt einen DataFrame, vereinfacht die Weiterverarbeitung"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 671,
   "metadata": {},
   "outputs": [],
   "source": [
    "last_date = new_data.sample_date.unique()[-1]\n",
    "last_day = data_df.query('sample_date == @last_date')\n",
    "day1 = data_df.query('sample_date == \"2021-02-01\"')\n",
    "day2 = data_df.query('sample_date == \"2021-02-02\"')\n",
    "day3 = data_df.query('sample_date == \"2021-02-03\"')\n",
    "day4 = data_df.query('sample_date == \"2021-02-04\"')\n",
    "day5 = data_df.query('sample_date == \"2021-02-05\"')\n",
    "day6 = data_df.query('sample_date == \"2021-02-06\"')\n",
    "day7 = data_df.query('sample_date == \"2021-02-07\"')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 672,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Bereinigung wegen eines Messfehlers zwischendrin\n",
    "a =day3.iloc[1771][\"diff1\"]\n",
    "day3 = day3[day3.diff1 != a]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Gruppieren der Zeitanteile pro einzelnem Zustand, um diese für die Tagesansichten in der App implementieren zu können."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 673,
   "metadata": {},
   "outputs": [],
   "source": [
    "#day1_test.groupby('Zustand')['diff1'].sum()\n",
    "day1_grouped = day1.groupby('Zustand', as_index=False).agg({\"diff1\": \"sum\"})\n",
    "#für Darstellung der Werte in Textfeld\n",
    "day1_grouped = day1_grouped.assign(string=lambda x: x['diff1'].astype('str'))\n",
    "day2_grouped = day2.groupby('Zustand', as_index=False).agg({\"diff1\": \"sum\"})\n",
    "day2_grouped = day2_grouped.assign(string=lambda x: x['diff1'].astype('str'))\n",
    "day3_grouped = day3.groupby('Zustand', as_index=False).agg({\"diff1\": \"sum\"})\n",
    "day3_grouped = day3_grouped.assign(string=lambda x: x['diff1'].astype('str'))\n",
    "day4_grouped = day4.groupby('Zustand', as_index=False).agg({\"diff1\": \"sum\"})\n",
    "day4_grouped = day4_grouped.assign(string=lambda x: x['diff1'].astype('str'))\n",
    "day5_grouped = day5.groupby('Zustand', as_index=False).agg({\"diff1\": \"sum\"})\n",
    "day5_grouped = day5_grouped.assign(string=lambda x: x['diff1'].astype('str'))\n",
    "day6_grouped = day6.groupby('Zustand', as_index=False).agg({\"diff1\": \"sum\"})\n",
    "day6_grouped = day6_grouped.assign(string=lambda x: x['diff1'].astype('str'))\n",
    "day7_grouped = day7.groupby('Zustand', as_index=False).agg({\"diff1\": \"sum\"})\n",
    "day7_grouped = day7_grouped.assign(string=lambda x: x['diff1'].astype('str'))\n",
    "last_day_grouped = last_day.groupby('Zustand', as_index=False).agg({\"diff1\": \"sum\"})\n",
    "last_day_grouped = last_day_grouped.assign(string=lambda x: x['diff1'].astype('str'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 674,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Dataframe für Tagesübersicht\n",
    "tail = last_day.tail(1)\n",
    "last = tail[['sample_date', 'timetuple', 'temp', \"humi\", \"Zustand\"]].copy()\n",
    "last = last.set_index('sample_date')\n",
    "cols = list(last.columns)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Vorbereitung zur Darstellung der Übersichtsseite"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 676,
   "metadata": {},
   "outputs": [],
   "source": [
    "LARGE_FONT= (\"Verdana\", 15)\n",
    "Txt_FONT = (\"Verdana\", 12)\n",
    "class App(tk.Tk):\n",
    "\n",
    "    def __init__(self, *args, **kwargs):\n",
    "        tk.Tk.__init__(self, *args, **kwargs)\n",
    "        tk.Tk.iconbitmap(self)\n",
    "        tk.Tk.wm_title(self)        \n",
    "        container = tk.Frame(self)\n",
    "        container.pack(fill=\"both\", expand = True)\n",
    "        container.grid_rowconfigure(0, weight=1)\n",
    "        container.grid_columnconfigure(1, weight=1)\n",
    "        self.frames = {}\n",
    "        \n",
    "        pages=[DayPage, InfoPage, OVPage, PageZero, StartPage, PageOne, PageTwo, PageThree, PageFour, PageFive, PageSix, PageSeven]\n",
    "        \n",
    "        for F in pages:\n",
    "            frame = F(container, self)\n",
    "            self.frames[F] = frame\n",
    "            frame.grid(row=2, column=0, sticky=\"nsew\")\n",
    "        self.show_frame(PageZero)\n",
    "\n",
    "    def show_frame(self, cont):\n",
    "        frame = self.frames[cont]\n",
    "        frame.tkraise()\n",
    "\n",
    "class PageZero(tk.Frame):\n",
    "\n",
    "    def __init__(self, parent, controller):\n",
    "        tk.Frame.__init__(self,parent)\n",
    "           \n",
    "        def close_app():\n",
    "            app.destroy()\n",
    "                       \n",
    "        label = tk.Label(self, text=\"Schimmelüberwachung\",bg=\"mediumaquamarine\",width=65, height = 7, font=LARGE_FONT)\n",
    "        label.pack(fill='x')\n",
    "        \n",
    "        button_days = tk.Button(self, text=\"Tagesübersicht\", width=35, height = 4, bg=\"silver\", \n",
    "                            command=lambda: controller.show_frame(DayPage))\n",
    "        button_days.pack()\n",
    "        \n",
    "        button_days = tk.Button(self, text=\"Wochenübersicht\", width=35, height = 4, bg=\"silver\", \n",
    "                            command=lambda: controller.show_frame(StartPage))\n",
    "        button_days.pack()\n",
    "    \n",
    "        button_overall = tk.Button(self, text=\"Gesamtübersicht\", width=35, height = 4, bg=\"silver\", \n",
    "                            command=lambda: controller.show_frame(OVPage))\n",
    "        button_overall.pack()\n",
    "        \n",
    "        button_info = tk.Button(self, text=\"Info\",command=lambda: controller.show_frame(InfoPage), bg='white', fg='black', relief='raised', width=25, height=2,font=('Helvetica 9'))\n",
    "        button_info.pack(side=\"left\", anchor=\"s\", fill=\"x\")\n",
    "               \n",
    "        button_close = tk.Button(self, text=\"Exit\",command=close_app, bg='dark red', fg='white', relief='raised', width=25, height=2,font=('Helvetica 9'))\n",
    "        button_close.pack(side=\"right\", anchor=\"s\", fill=\"x\")\n",
    "\n",
    "        \n",
    "class InfoPage(tk.Frame):\n",
    "\n",
    "    def __init__(self, parent, controller):\n",
    "        tk.Frame.__init__(self,parent)\n",
    "           \n",
    "        def close_app():\n",
    "            app.destroy()\n",
    "                       \n",
    "        label = tk.Label(self, text=\"Information zur App\",bg=\"mediumaquamarine\", height = 7, width=65, font=LARGE_FONT)\n",
    "        label.pack(fill=\"x\")\n",
    "        \n",
    "        text = tk.Text(self, height=16, width=60)\n",
    "        text.pack()\n",
    "        text.insert(tk.END, \"Hallo Besucher!\\n\\nSchön, dass Du dir Zeit nimmst, unsere Ergebnisse anzusehen!\\nDie App soll einen Überblick darüber verschaffen,\\nwie man den Zustand des Bades auf Schimmel überprüfen kann.\\nDie gewählten Darstellungen und Statistiken sollen\\nden Einfluss von Duschen auf Schimmelbildung verdeutlichen.\\n\\nViel Spaß beim Durcklicken und Entdecken!\\n\\nP.s. Über 'Exit' kann die App jederzeit verlassen werden.\\n\\nGruß Svenja und Moritz\")\n",
    "        text.configure(state='disabled',font=Txt_FONT, background='whitesmoke', relief='ridge')\n",
    "               \n",
    "        button1 = tk.Button(self, text=\"Startseite\", bg=\"lavender\", fg=\"black\", width=25, height=2,\n",
    "                            command=lambda: controller.show_frame(PageZero))\n",
    "        button1.pack(padx=20, pady=5, side =\"left\", fill=\"x\", anchor=\"s\") \n",
    "\n",
    "        button_close = tk.Button(self, text=\"Exit\",command=close_app, bg='dark red', fg='white', relief='raised', width=25, height=2,font=('Helvetica 9'))\n",
    "        button_close.pack(padx=20, pady=5, side =\"right\", fill=\"x\", anchor=\"s\")\n",
    "\n",
    "class DayPage(tk.Frame):\n",
    "\n",
    "    def __init__(self, parent, controller):\n",
    "        tk.Frame.__init__(self,parent)\n",
    "           \n",
    "        def close_app():\n",
    "            app.destroy()\n",
    "                       \n",
    "        label = tk.Label(self, text=\"Tagesansicht\",bg=\"mediumaquamarine\", height = 7, width=65, font=LARGE_FONT)\n",
    "        label.pack(fill=\"x\")\n",
    "       \n",
    "        tree = ttk.Treeview(self, height=2)\n",
    "        tree.pack(side=\"top\", fill=\"x\")\n",
    "        tree[\"columns\"] = cols\n",
    "        for i in cols:\n",
    "            tree.column(i, anchor=\"w\")\n",
    "            tree.heading(i, text=i, anchor='w')\n",
    "\n",
    "        for index, row in last.iterrows():\n",
    "            tree.insert(\"\",0,text=index,values=list(row))\n",
    "            \n",
    "        label = tk.Label(self, borderwidth=2, relief=\"ridge\", text=\"Aktion: Heizung aufrdrehen\",bg=\"whitesmoke\", height = 4, width=25, font=LARGE_FONT)\n",
    "        label.pack(pady=5)\n",
    "        \n",
    "        button1 = tk.Button(self, text=\"Startseite\", bg=\"lavender\", fg=\"black\", width=25, height=2,\n",
    "                            command=lambda: controller.show_frame(PageZero))\n",
    "        button1.pack(padx=20, pady=5, side =\"left\", fill=\"x\", anchor=\"s\") \n",
    "\n",
    "        button_close = tk.Button(self, text=\"Exit\",command=close_app, bg='dark red', fg='white', relief='raised', width=25, height=2,font=('Helvetica 9'))\n",
    "        button_close.pack(padx=20, pady=5, side =\"right\", fill=\"x\", anchor=\"s\")\n",
    "          \n",
    "        \n",
    "class OVPage(tk.Frame):\n",
    "\n",
    "    def __init__(self, parent, controller):\n",
    "        tk.Frame.__init__(self,parent)\n",
    "           \n",
    "        def close_app():\n",
    "            app.destroy()\n",
    "                       \n",
    "        label = tk.Label(self, text=\"Gesamtübersicht\",bg=\"mediumaquamarine\", height = 7, width=65, font=LARGE_FONT)\n",
    "        label.pack(fill=\"x\")\n",
    "       \n",
    "        text = tk.Text(self, width=20)\n",
    "        text.pack(side=\"left\", anchor=\"n\", fill=\"y\")\n",
    "        text.insert(tk.END, \"Infos zum\\nMesszeitraum:\\n\\n\")\n",
    "        text.insert(tk.END, \"\\nMesstage:\"+str(sum_days))\n",
    "        text.insert(tk.END, \"\\n\\nGelüftet: \"+str(len(data_df[data_df['gyro_x'] == 1]))+\"x\")\n",
    "        text.configure(state='disabled',font=Txt_FONT, background='whitesmoke', relief='ridge')\n",
    "        \n",
    "        Werte =[str(df_grouped[\"sum_p\"][0])[:4]+\"%\",\n",
    "               str(df_grouped[\"sum_p\"][1])[:4]+\"%\",\n",
    "               str(df_grouped[\"sum_p\"][2])[:4]+\"%\",\n",
    "               str(df_grouped[\"sum_p\"][3])[:4]+\"%\",\n",
    "               str(df_grouped[\"sum_p\"][4])[:4]+\"%\"]\n",
    "        Zustand = [\"Zu trocken\",\"Zu kalt\",\"Ideal\",\"Zu Warm\",\"Schimmel\"]\n",
    "        colors = ['khaki','steelblue','lightcyan','lightsalmon','mediumaquamarine']\n",
    "        explode = [0,0,0,0,0.3]\n",
    "        \n",
    "        figure_ov = Figure(figsize=(8,4), dpi=100)\n",
    "        ax_ov = figure_ov.add_subplot(111)\n",
    "        \n",
    "        df_grouped_test.plot.pie(y='diff1',labels=Werte, explode=explode, ax=ax_ov, colors=colors, fontsize=10, grid=True)\n",
    "        ax_ov.legend(labels=Zustand, loc='upper center', bbox_to_anchor=(0.5, -0.05), fancybox=True, shadow=True, ncol=5)\n",
    "        ax_ov.set_title('Verteilung der Zustände im Messzeitraum')\n",
    "        ax_ov.yaxis.set_visible(False)\n",
    "        canvas = FigureCanvasTkAgg(figure_ov, self)\n",
    "        canvas.draw()\n",
    "        canvas.get_tk_widget().pack(side=tk.BOTTOM, fill=tk.BOTH, expand=True)\n",
    "        canvas._tkcanvas.pack(side=tk.TOP, fill=tk.BOTH, expand=True)\n",
    "        \n",
    "        button1 = tk.Button(self, text=\"Startseite\", bg=\"lavender\", fg=\"black\", width=25, height=2,\n",
    "                            command=lambda: controller.show_frame(PageZero))\n",
    "        button1.pack(padx=20, pady=5, side =\"left\", fill=\"x\", anchor=\"s\") \n",
    "\n",
    "        button_close = tk.Button(self, text=\"Exit\",command=close_app, bg='dark red', fg='white', relief='raised', width=25, height=2,font=('Helvetica 9'))\n",
    "        button_close.pack(padx=20, pady=5, side =\"right\", fill=\"x\", anchor=\"s\")\n",
    "               \n",
    "\n",
    "class StartPage(tk.Frame):\n",
    "\n",
    "    def __init__(self, parent, controller):\n",
    "        tk.Frame.__init__(self,parent)\n",
    "           \n",
    "        def close_app():\n",
    "            app.destroy()\n",
    "                               \n",
    "        label = tk.Label(self, text=\"Wochenübersicht\",bg=\"mediumaquamarine\",width=65, height = 7, font=LARGE_FONT)\n",
    "        label.pack(fill='x')\n",
    "        \n",
    "        button1 = tk.Button(self, text=\"01. Februar\", width=25, height = 2, bg=\"silver\", \n",
    "                            command=lambda: controller.show_frame(PageOne))\n",
    "        button1.pack(anchor=\"n\")\n",
    "        button2 = tk.Button(self, text=\"02. Februar\", width=25, height = 2, bg=\"silver\", \n",
    "                            command=lambda: controller.show_frame(PageTwo))\n",
    "        button2.pack()\n",
    "        button3 = tk.Button(self, text=\"03. Februar\", width=25, height = 2, bg=\"silver\", \n",
    "                            command=lambda: controller.show_frame(PageThree))\n",
    "        button3.pack()\n",
    "        \n",
    "        button4 = tk.Button(self, text=\"04. Februar\", width=25, height = 2, bg=\"silver\", \n",
    "                            command=lambda: controller.show_frame(PageFour))\n",
    "        button4.pack()\n",
    "        \n",
    "        button5 = tk.Button(self, text=\"05. Februar\", width=25, height = 2, bg=\"silver\", \n",
    "                            command=lambda: controller.show_frame(PageFive))\n",
    "        button5.pack()\n",
    "       \n",
    "        button6 = tk.Button(self, text=\"06. Februar\", width=25, height = 2, bg=\"silver\", \n",
    "                            command=lambda: controller.show_frame(PageSix))\n",
    "        button6.pack()\n",
    "        \n",
    "        button7 = tk.Button(self, text=\"07. Februar\", width=25, height = 2, bg=\"silver\", \n",
    "                            command=lambda: controller.show_frame(PageSeven))\n",
    "        button7.pack()\n",
    "                        \n",
    "        button_home = tk.Button(self, text=\"Startseite\", bg=\"lavender\", fg=\"black\", width=25, height =2, \n",
    "                            command=lambda: controller.show_frame(PageZero))\n",
    "        button_home.pack(side=\"left\", anchor=\"s\", fill=\"x\")\n",
    "        \n",
    "        button_close = tk.Button(self, text=\"Exit\",command=close_app, bg='dark red', fg='white', relief='raised', width=25, height=2,font=('Helvetica 9'))\n",
    "        button_close.pack(side=\"right\", anchor=\"s\", fill=\"x\")\n",
    "        \n",
    "class PageOne(tk.Frame):\n",
    "    def __init__(self, parent, controller):\n",
    "        tk.Frame.__init__(self, parent)\n",
    "              \n",
    "        label = tk.Label(self, text=\"01. Februar\", font=LARGE_FONT)\n",
    "        label.pack(pady=1,padx=100)\n",
    "        \n",
    "        button1 = tk.Button(self, text=\"Zurück zur Übersicht\", bg=\"lavender\", fg=\"black\", width=20, \n",
    "                            command=lambda: controller.show_frame(StartPage))\n",
    "        button1.pack(pady=10, expand=True) \n",
    "        \n",
    "        button_vor = tk.Button(self, text=\"Nächster Tag\", bg=\"steelblue\", fg=\"black\", width=20, \n",
    "                            command=lambda: controller.show_frame(PageTwo))\n",
    "        button_vor.pack(expand=True)\n",
    "        \n",
    "        text = tk.Text(self, width=20)\n",
    "        text.pack(side=\"left\", anchor=\"n\", fill=\"y\")\n",
    "        text.insert(tk.END, \"Infos zum Tag!\\n\\nZu trocken:\\n\"+day1_grouped[\"string\"][0][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nZu kalt:\\n\"+day1_grouped[\"string\"][1][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nIdeal:\\n\"+day1_grouped[\"string\"][2][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nZu warm:\\n\"+day1_grouped[\"string\"][3][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nSchimmel:\\n\"+day1_grouped[\"string\"][4][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nGelüftet: \"+str(len(day1[day1['gyro_x'] == 1]))+\"x\\n\")\n",
    "        text.configure(state='disabled',font=Txt_FONT, background='whitesmoke', relief='ridge')\n",
    "                                     \n",
    "        figure1 = Figure(figsize=(8,5), dpi=100)\n",
    "        ax1 = figure1.add_subplot(111)\n",
    "        ax1.set_ylabel('Humidity in %')\n",
    "        ax1.set_xlabel('Time')\n",
    "        day1[[\"timetuple\", \"humi\"]].plot(x=\"timetuple\",c = \"darkseagreen\", kind=\"line\", ax=ax1, fontsize=10, grid=True)\n",
    "        ax1.legend(loc=\"upper left\")\n",
    "        \n",
    "        ax1_1 = ax1.twinx()\n",
    "        ax1_1.set_ylabel('Temperature in C°')\n",
    "        ax1_1.set_xlabel('Time')\n",
    "        day1[[\"timetuple\", \"temp\"]].plot(x=\"timetuple\",c = \"teal\", kind=\"line\", ax=ax1_1, fontsize=10, grid=True)\n",
    "        ax1_1.legend(loc=\"upper right\")\n",
    "        \n",
    "        canvas = FigureCanvasTkAgg(figure1, self)\n",
    "        canvas.draw()\n",
    "        canvas.get_tk_widget().pack(side=\"left\", fill=tk.BOTH, expand=False)\n",
    "        toolbar = NavigationToolbar2TkAgg(canvas, self)\n",
    "        toolbar.update()\n",
    "        canvas._tkcanvas.pack(side=tk.TOP,anchor=\"s\", fill=tk.BOTH, expand=True)\n",
    "\n",
    "        \n",
    "class PageTwo(tk.Frame):\n",
    "    def __init__(self, parent, controller):\n",
    "        tk.Frame.__init__(self, parent)\n",
    "        label = tk.Label(self, text=\"02. Februar\", font=LARGE_FONT)\n",
    "        label.pack(pady=1,padx=100)\n",
    "\n",
    "        button1 = tk.Button(self, text=\"Zurück zur Übersicht\", bg=\"lavender\", fg=\"black\", width=20, \n",
    "                            command=lambda: controller.show_frame(StartPage))\n",
    "        button1.pack(expand=True)  \n",
    "        \n",
    "        button_back = tk.Button(self, text=\"Vorheriger Tag\", bg=\"lightsteelblue\", fg =\"black\", width=20,\n",
    "                                command=lambda: controller.show_frame(PageOne))\n",
    "        button_back.pack(side=\"top\")\n",
    "        \n",
    "        button_vor = tk.Button(self, text=\"Nächster Tag\", bg=\"steelblue\", fg=\"black\", width=20,\n",
    "                            command=lambda: controller.show_frame(PageThree))\n",
    "        button_vor.pack(side=\"top\")\n",
    "       \n",
    "        text = tk.Text(self, width=20)\n",
    "        text.pack(side=\"left\", anchor=\"n\", fill=\"y\")\n",
    "        text.insert(tk.END, \"Infos zum Tag!\\n\\nZu trocken:\\n\"+day2_grouped[\"string\"][0][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nZu kalt:\\n\"+day2_grouped[\"string\"][1][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nIdeal:\\n\"+day2_grouped[\"string\"][2][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nZu warm:\\n\"+day2_grouped[\"string\"][3][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nSchimmel:\\n\"+day2_grouped[\"string\"][4][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nGelüftet: \"+str(len(day2[day2['gyro_x'] == 1]))+\"x\\n\")\n",
    "        text.configure(state='disabled',font=Txt_FONT, background='whitesmoke', relief='ridge')\n",
    "                \n",
    "        figure2 = Figure(figsize=(8,5), dpi=100)\n",
    "        ax2 = figure2.add_subplot(111)\n",
    "        ax2.set_ylabel('Humidity in %')\n",
    "        ax2.set_xlabel('Time')\n",
    "        day2[[\"timetuple\", \"humi\"]].plot(x=\"timetuple\",c = \"darkseagreen\", kind=\"line\", ax=ax2, fontsize=10, grid=True)\n",
    "        ax2.legend(loc=\"upper left\")\n",
    "        \n",
    "        ax2_1 = ax2.twinx()\n",
    "        ax2_1.set_ylabel('Temperature in C°')\n",
    "        ax2_1.set_xlabel('Time')\n",
    "        day2[[\"timetuple\", \"temp\"]].plot(x=\"timetuple\",c = \"teal\", kind=\"line\", ax=ax2_1, fontsize=10, grid=True)\n",
    "        ax2_1.legend(loc=\"upper right\")\n",
    "            \n",
    "        canvas = FigureCanvasTkAgg(figure2, self)\n",
    "        canvas.draw()\n",
    "        canvas.get_tk_widget().pack(side=tk.BOTTOM, fill=tk.BOTH, expand=True)\n",
    "        toolbar = NavigationToolbar2TkAgg(canvas, self)\n",
    "        toolbar.update()\n",
    "        canvas._tkcanvas.pack(side=tk.TOP, fill=tk.BOTH, expand=True)\n",
    "\n",
    "class PageThree(tk.Frame):\n",
    "    def __init__(self, parent, controller):\n",
    "        tk.Frame.__init__(self, parent)\n",
    "        label = tk.Label(self, text=\"03. Februar\", font=LARGE_FONT)\n",
    "        label.pack(pady=1,padx=100)\n",
    "\n",
    "        button1 = tk.Button(self, text=\"Zurück zur Übersicht\", bg=\"lavender\", fg=\"black\", width=20, \n",
    "                            command=lambda: controller.show_frame(StartPage))\n",
    "        button1.pack(expand=True)  \n",
    "        \n",
    "        button_back = tk.Button(self, text=\"Vorheriger Tag\", bg=\"lightsteelblue\", fg =\"black\", width=20,\n",
    "                                command=lambda: controller.show_frame(PageTwo))\n",
    "        button_back.pack()\n",
    "        \n",
    "        button_vor = tk.Button(self, text=\"Nächster Tag\", bg=\"steelblue\", fg=\"black\", width=20,\n",
    "                            command=lambda: controller.show_frame(PageFour))\n",
    "        button_vor.pack()\n",
    "        \n",
    "        text = tk.Text(self, width=20)\n",
    "        text.pack(side=\"left\", anchor=\"n\", fill=\"y\")\n",
    "        text.insert(tk.END, \"Infos zum Tag!\\n\\nZu trocken:\\n\"+day3_grouped[\"string\"][0][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nZu kalt:\\n\"+day3_grouped[\"string\"][1][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nIdeal:\\n\"+day3_grouped[\"string\"][2][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nZu warm:\\n\"+str(0)+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nSchimmel:\\n\"+str(0)+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nGelüftet: \"+str(len(day3[day3['gyro_x'] == 1]))+\"x\\n\")\n",
    "        text.configure(state='disabled',font=Txt_FONT, background='whitesmoke', relief='ridge')\n",
    "                        \n",
    "        figure3 = Figure(figsize=(8,5), dpi=100)\n",
    "        ax3 = figure3.add_subplot(111)\n",
    "        ax3.set_ylabel('Humidity in %')\n",
    "        ax3.set_xlabel('Time')\n",
    "        day3[[\"timetuple\", \"humi\"]].plot(x=\"timetuple\",c = \"darkseagreen\", kind=\"line\", ax=ax3, fontsize=10, grid=True)\n",
    "        ax3.legend(loc=\"upper left\")\n",
    "        \n",
    "        ax3_1 = ax3.twinx()\n",
    "        ax3_1.set_ylabel('Temperature in C°')\n",
    "        ax3_1.set_xlabel('Time')\n",
    "        day3[[\"timetuple\", \"temp\"]].plot(x=\"timetuple\",c = \"teal\", kind=\"line\", ax=ax3_1, fontsize=10, grid=True)\n",
    "        ax3_1.legend(loc=\"upper right\")\n",
    "        \n",
    "        canvas = FigureCanvasTkAgg(figure3, self)\n",
    "        canvas.draw()\n",
    "        canvas.get_tk_widget().pack(side=tk.BOTTOM, fill=tk.BOTH, expand=True)\n",
    "        toolbar = NavigationToolbar2TkAgg(canvas, self)\n",
    "        toolbar.update()\n",
    "        canvas._tkcanvas.pack(side=tk.TOP, fill=tk.BOTH, expand=True)      \n",
    "\n",
    "class PageFour(tk.Frame):\n",
    "    def __init__(self, parent, controller):\n",
    "        tk.Frame.__init__(self, parent)\n",
    "        label = tk.Label(self, text=\"04. Februar\", font=LARGE_FONT)\n",
    "        label.pack(pady=1,padx=100)\n",
    "\n",
    "        button1 = tk.Button(self, text=\"Zurück zur Übersicht\", bg=\"lavender\", fg=\"black\", width=20, \n",
    "                            command=lambda: controller.show_frame(StartPage))\n",
    "        button1.pack(expand=True)  \n",
    "        \n",
    "        button_back = tk.Button(self, text=\"Vorheriger Tag\", bg=\"lightsteelblue\", fg =\"black\", width=20,\n",
    "                                command=lambda: controller.show_frame(PageThree))\n",
    "        button_back.pack()\n",
    "        \n",
    "        button_vor = tk.Button(self, text=\"Nächster Tag\", bg=\"steelblue\", fg=\"black\", width=20,\n",
    "                            command=lambda: controller.show_frame(PageFive))\n",
    "        button_vor.pack()\n",
    "       \n",
    "        text = tk.Text(self, width=20)\n",
    "        text.pack(side=\"left\", anchor=\"n\", fill=\"y\")\n",
    "        text.insert(tk.END, \"Infos zum Tag!\\n\\nZu trocken:\\n\"+day4_grouped[\"string\"][0][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nZu kalt:\\n\"+str(0)+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nIdeal:\\n\"+day4_grouped[\"string\"][1][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nZu warm:\\n\"+day4_grouped[\"string\"][2][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nSchimmel:\\n\"+day4_grouped[\"string\"][3][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nGelüftet: \"+str(len(day4[day4['gyro_x'] == 1]))+\"x\\n\")\n",
    "        text.configure(state='disabled',font=Txt_FONT, background='whitesmoke', relief='ridge')\n",
    "                \n",
    "        figure4 = Figure(figsize=(8,5), dpi=100)\n",
    "        ax4 = figure4.add_subplot(111)\n",
    "        ax4.set_ylabel('Humidity in %')\n",
    "        ax4.set_xlabel('Time')\n",
    "        day4[[\"timetuple\", \"humi\"]].plot(x=\"timetuple\",c = \"darkseagreen\", kind=\"line\", ax=ax4, fontsize=10, grid=True)\n",
    "        ax4.legend(loc=\"upper left\")\n",
    "        \n",
    "        ax4_1 = ax4.twinx()\n",
    "        ax4_1.set_ylabel('Temperature in C°')\n",
    "        ax4_1.set_xlabel('Time')\n",
    "        day4[[\"timetuple\", \"temp\"]].plot(x=\"timetuple\",c = \"teal\", kind=\"line\", ax=ax4_1, fontsize=10, grid=True)\n",
    "        ax4_1.legend(loc=\"upper right\")\n",
    "        \n",
    "        canvas = FigureCanvasTkAgg(figure4, self)\n",
    "        canvas.draw()\n",
    "        canvas.get_tk_widget().pack(side=tk.BOTTOM, fill=tk.BOTH, expand=True)\n",
    "        toolbar = NavigationToolbar2TkAgg(canvas, self)\n",
    "        toolbar.update()\n",
    "        canvas._tkcanvas.pack(side=tk.TOP, fill=tk.BOTH, expand=True)\n",
    "\n",
    "class PageFive(tk.Frame):\n",
    "    def __init__(self, parent, controller):\n",
    "        tk.Frame.__init__(self, parent)\n",
    "        label = tk.Label(self, text=\"05. Februar\", font=LARGE_FONT)\n",
    "        label.pack(pady=1,padx=100)\n",
    "\n",
    "        button1 = tk.Button(self, text=\"Zurück zur Übersicht\", bg=\"lavender\", fg=\"black\", width=20, \n",
    "                            command=lambda: controller.show_frame(StartPage))\n",
    "        button1.pack(expand=True)  \n",
    "        \n",
    "        button_back = tk.Button(self, text=\"Vorheriger Tag\", bg=\"lightsteelblue\", fg =\"black\", width=20,\n",
    "                                command=lambda: controller.show_frame(PageFour))\n",
    "        button_back.pack()\n",
    "        \n",
    "        button_vor = tk.Button(self, text=\"Nächster Tag\", bg=\"steelblue\", fg=\"black\", width=20,\n",
    "                            command=lambda: controller.show_frame(PageSix))\n",
    "        button_vor.pack()\n",
    "       \n",
    "        text = tk.Text(self, width=20)\n",
    "        text.pack(side=\"left\", anchor=\"n\", fill=\"y\")\n",
    "        text.insert(tk.END, \"Infos zum Tag!\\n\\nZu trocken:\\n\"+day5_grouped[\"string\"][0][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nZu kalt:\\n\"+day5_grouped[\"string\"][1][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nIdeal:\\n\"+day5_grouped[\"string\"][2][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nZu warm:\\n\"+day5_grouped[\"string\"][3][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nSchimmel:\\n\"+day5_grouped[\"string\"][4][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nGelüftet: \"+str(len(day5[day5['gyro_x'] == 1]))+\"x\\n\")\n",
    "        text.configure(state='disabled',font=Txt_FONT, background='whitesmoke', relief='ridge')\n",
    "                \n",
    "        figure5 = Figure(figsize=(8,5), dpi=100)\n",
    "        ax5 = figure5.add_subplot(111)\n",
    "        ax5.set_ylabel('Humidity in %')\n",
    "        ax5.set_xlabel('Time')\n",
    "        day5[[\"timetuple\", \"humi\"]].plot(x=\"timetuple\",c = \"darkseagreen\", kind=\"line\", ax=ax5, fontsize=10, grid=True)\n",
    "        ax5.legend(loc=\"upper left\")\n",
    "        \n",
    "        ax5_1 = ax5.twinx()\n",
    "        ax5_1.set_ylabel('Temperature in C°')\n",
    "        ax5_1.set_xlabel('Time')\n",
    "        day5[[\"timetuple\", \"temp\"]].plot(x=\"timetuple\",c = \"teal\", kind=\"line\", ax=ax5_1, fontsize=10, grid=True)\n",
    "        ax5_1.legend(loc=\"upper right\")\n",
    "        \n",
    "        canvas = FigureCanvasTkAgg(figure5, self)\n",
    "        canvas.draw()\n",
    "        canvas.get_tk_widget().pack(side=tk.BOTTOM, fill=tk.BOTH, expand=True)\n",
    "        toolbar = NavigationToolbar2TkAgg(canvas, self)\n",
    "        toolbar.update()\n",
    "        canvas._tkcanvas.pack(side=tk.TOP, fill=tk.BOTH, expand=True)\n",
    "        \n",
    "class PageSix(tk.Frame):\n",
    "    def __init__(self, parent, controller):\n",
    "        tk.Frame.__init__(self, parent)\n",
    "        label = tk.Label(self, text=\"06. Februar\", font=LARGE_FONT)\n",
    "        label.pack(pady=1,padx=100)\n",
    "\n",
    "        button1 = tk.Button(self, text=\"Zurück zur Übersicht\", bg=\"lavender\", fg=\"black\", width=20, \n",
    "                            command=lambda: controller.show_frame(StartPage))\n",
    "        button1.pack(expand=True)  \n",
    "        \n",
    "        button_back = tk.Button(self, text=\"Vorheriger Tag\", bg=\"lightsteelblue\", fg =\"black\", width=20,\n",
    "                                command=lambda: controller.show_frame(PageFive))\n",
    "        button_back.pack()\n",
    "        \n",
    "        button_vor = tk.Button(self, text=\"Nächster Tag\", bg=\"steelblue\", fg=\"black\", width=20,\n",
    "                            command=lambda: controller.show_frame(PageSeven))\n",
    "        button_vor.pack()\n",
    "       \n",
    "        text = tk.Text(self, width=20)\n",
    "        text.pack(side=\"left\", anchor=\"n\", fill=\"y\")\n",
    "        text.insert(tk.END, \"Infos zum Tag!\\n\\nZu trocken:\\n\"+day6_grouped[\"string\"][0][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nZu kalt:\\n\"+day6_grouped[\"string\"][1][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nIdeal:\\n\"+day6_grouped[\"string\"][2][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nZu warm:\\n\"+day6_grouped[\"string\"][3][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nSchimmel:\\n\"+day6_grouped[\"string\"][4][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nGelüftet: \"+str(len(day6[day6['gyro_x'] == 1]))+\"x\\n\")\n",
    "        text.configure(state='disabled',font=Txt_FONT, background='whitesmoke', relief='ridge')\n",
    "                \n",
    "        figure6 = Figure(figsize=(8,5), dpi=100)\n",
    "        ax6 = figure6.add_subplot(111)\n",
    "        ax6.set_ylabel('Humidity in %')\n",
    "        ax6.set_xlabel('Time')\n",
    "        day6[[\"timetuple\", \"humi\"]].plot(x=\"timetuple\",c = \"darkseagreen\", kind=\"line\", ax=ax6, fontsize=10, grid=True)\n",
    "        ax6.legend(loc=\"upper left\")\n",
    "        \n",
    "        ax6_1 = ax6.twinx()\n",
    "        ax6_1.set_ylabel('Temperature in C°')\n",
    "        ax6_1.set_xlabel('Time')\n",
    "        day6[[\"timetuple\", \"temp\"]].plot(x=\"timetuple\",c = \"teal\", kind=\"line\", ax=ax6_1, fontsize=10, grid=True)\n",
    "        ax6_1.legend(loc=\"upper right\")  \n",
    "        \n",
    "        canvas = FigureCanvasTkAgg(figure6, self)\n",
    "        canvas.draw()\n",
    "        canvas.get_tk_widget().pack(side=tk.BOTTOM, fill=tk.BOTH, expand=True)\n",
    "        toolbar = NavigationToolbar2TkAgg(canvas, self)\n",
    "        toolbar.update()\n",
    "        canvas._tkcanvas.pack(side=tk.TOP, fill=tk.BOTH, expand=True)\n",
    "\n",
    "class PageSeven(tk.Frame):\n",
    "    def __init__(self, parent, controller):\n",
    "        tk.Frame.__init__(self, parent)\n",
    "        label = tk.Label(self, text=\"07. Februar\", font=LARGE_FONT)\n",
    "        label.pack(pady=1,padx=100)\n",
    "\n",
    "        button1 = tk.Button(self, text=\"Zurück zur Übersicht\", bg=\"lavender\", fg=\"black\", width=20, \n",
    "                            command=lambda: controller.show_frame(StartPage))\n",
    "        button1.pack(expand=True)  \n",
    "        \n",
    "        button_back = tk.Button(self, text=\"Vorheriger Tag\", bg=\"lightsteelblue\", fg =\"black\", width=20,\n",
    "                                command=lambda: controller.show_frame(PageSix))\n",
    "        button_back.pack(expand=True)\n",
    "       \n",
    "        text = tk.Text(self, width=20)\n",
    "        text.pack(side=\"left\", anchor=\"n\", fill=\"y\")\n",
    "        text.insert(tk.END, \"Infos zum Tag!\\n\\nZu trocken:\\n\"+day7_grouped[\"string\"][0][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nZu kalt:\\n\"+day7_grouped[\"string\"][1][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nIdeal:\\n\"+day7_grouped[\"string\"][2][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nZu warm:\\n\"+day7_grouped[\"string\"][3][7:15]+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nSchimmel:\\n\"+str(0)+\"h\\n\")\n",
    "        text.insert(tk.END, \"\\nGelüftet: \"+str(len(day7[day7['gyro_x'] == 1]))+\"x\\n\")\n",
    "        text.configure(state='disabled',font=Txt_FONT, background='whitesmoke', relief='ridge')\n",
    "                \n",
    "        figure7 = Figure(figsize=(8,5), dpi=100)\n",
    "        ax7 = figure7.add_subplot(111)\n",
    "        ax7.set_ylabel('Humidity in %')\n",
    "        ax7.set_xlabel('Time')\n",
    "        day7[[\"timetuple\", \"humi\"]].plot(x=\"timetuple\",c = \"darkseagreen\", kind=\"line\", ax=ax7, fontsize=10, grid=True)\n",
    "        ax7.legend(loc=\"upper left\")\n",
    "        \n",
    "        ax7_1 = ax7.twinx()\n",
    "        ax7_1.set_ylabel('Temperature in C°')\n",
    "        ax7_1.set_xlabel('Time')\n",
    "        day7[[\"timetuple\", \"temp\"]].plot(x=\"timetuple\",c = \"teal\", kind=\"line\", ax=ax7_1, fontsize=10, grid=True)\n",
    "        ax7_1.legend(loc=\"upper right\")\n",
    "        \n",
    "        canvas = FigureCanvasTkAgg(figure7, self)\n",
    "        canvas.draw()\n",
    "        canvas.get_tk_widget().pack(side=tk.BOTTOM, fill=tk.BOTH, expand=True)\n",
    "        toolbar = NavigationToolbar2TkAgg(canvas, self)\n",
    "        toolbar.update()\n",
    "        canvas._tkcanvas.pack(side=tk.TOP, fill=tk.BOTH, expand=True)\n",
    "        \n",
    "        \n",
    "app = App()\n",
    "app.mainloop()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
